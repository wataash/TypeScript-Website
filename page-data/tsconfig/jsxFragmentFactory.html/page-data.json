{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/jsxFragmentFactory.html","result":{"pageContext":{"title":"jsxFragmentFactory","lang":"en","html":"<p>Specify the JSX fragment factory function to use when targeting react JSX emit with <code>jsxFactory</code> compiler option is specified, e.g. <code>Fragment</code>.</p>\n<p>For example with this TSConfig:</p>\n<pre class=\"shiki tsconfig lsp\"><div class='code-container'><code><span style=\"color: #333333\">{</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #333333\">: {</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#target'><data-lsp lsp=\"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\">target</data-lsp></a>\"</span><span style=\"color: #333333\">: </span><span style=\"color: #A31515\">\"esnext\"</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#module'><data-lsp lsp=\"Specify what module code is generated.\">module</data-lsp></a>\"</span><span style=\"color: #333333\">: </span><span style=\"color: #A31515\">\"commonjs\"</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#jsx'><data-lsp lsp=\"Specify what JSX code is generated.\">jsx</data-lsp></a>\"</span><span style=\"color: #333333\">: </span><span style=\"color: #A31515\">\"react\"</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#jsxFactory'><data-lsp lsp=\"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'\">jsxFactory</data-lsp></a>\"</span><span style=\"color: #333333\">: </span><span style=\"color: #A31515\">\"h\"</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#jsxFragmentFactory'><data-lsp lsp=\"Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.\">jsxFragmentFactory</data-lsp></a>\"</span><span style=\"color: #333333\">: </span><span style=\"color: #A31515\">\"Fragment\"</span>\n<span style=\"color: #333333\">  }</span>\n<span style=\"color: #333333\">}</span></code></div></pre>\n<p>This TSX file:</p>\n<pre class=\"shiki\"><div class=\"language-id\">tsx</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #333333\"> { </span><span style=\"color: #1A1A1A\">h</span><span style=\"color: #333333\">, </span><span style=\"color: #1A1A1A\">Fragment</span><span style=\"color: #333333\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #333333\">;</span>\n\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">HelloWorld</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #333333\"> (</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #800000\">&lt;&gt;</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #800000\">&lt;div&gt;</span><span style=\"color: #333333\">Hello</span><span style=\"color: #800000\">&lt;/div&gt;</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #800000\">&lt;/&gt;</span>\n<span style=\"color: #333333\">);</span></code></div></pre>\n<p>Would look like:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #A31515\">\"use strict\"</span><span style=\"color: #333333\">;</span>\n<span style=\"color: #333333\">Object.defineProperty(exports, </span><span style=\"color: #A31515\">\"__esModule\"</span><span style=\"color: #333333\">, { value: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #333333\"> });</span>\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">preact_1</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> require(</span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #333333\">);</span>\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">HelloWorld</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #333333\"> (</span><span style=\"color: #1A1A1A\">preact_1</span><span style=\"color: #333333\">.h(</span><span style=\"color: #1A1A1A\">preact_1</span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\">Fragment</span><span style=\"color: #333333\">, </span><span style=\"color: #0000FF\">null</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #1A1A1A\">preact_1</span><span style=\"color: #333333\">.h(</span><span style=\"color: #A31515\">\"div\"</span><span style=\"color: #333333\">, </span><span style=\"color: #0000FF\">null</span><span style=\"color: #333333\">, </span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #333333\">)));</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEGcAsHsHcCiBbAlgFwFAgjBKN0BTAEwDFUAbIgLlFQDsSiAPAOgCtJsxwuWyAQwDG6WACcAnnWg8I-MuMEBzZEQbohoidNCKVajXPANYiceIncc4dIPHKi6OkUgNWWG8lgkArtTphWGRvBi5MTFRkAAcJdFAAb1BoABo9JVV1eIBfUAAzS2RQACJo8SIRdGKAbgighkh4gAkiSkpYAHUJShJQAF5QAAoASn6APiHMUFAAHjGp6dmSVAA3MZa22BngZbWF7fnh6qA'>Try</a></div></pre>\n<p>This option can be used on a per-file basis too similar to <a href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#fragments\">Babelâ€™s <code>/* @jsxFrag h */</code> directive</a>.</p>\n<p>For example:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@jsx</span><span style=\"color: #008000\"> h */</span>\n<span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@jsxFrag</span><span style=\"color: #008000\"> Fragment */</span>\n\n<span style=\"color: #0000FF\">import</span><span style=\"color: #333333\"> { </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(alias) function h(type: string, props: (JSXInternal.HTMLAttributes &amp;amp; JSXInternal.SVGAttributes &amp;amp; Record&amp;lt;string, any>) | null, ...children: ComponentChildren[]): VNode&amp;lt;any> (+1 overload)&amp;#13;(alias) namespace h&amp;#13;import h'>h</data-lsp></span><span style=\"color: #333333\">, </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(alias) const Fragment: ComponentClass&amp;lt;{}, {}>&amp;#13;import Fragment'>Fragment</data-lsp></span><span style=\"color: #333333\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #333333\">;</span>\n\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='const HelloWorld: () => h.JSX.Element'>HelloWorld</data-lsp></span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #333333\"> (</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #800000\">&lt;&gt;</span>\n<span style=\"color: #333333\">    </span><span style=\"color: #800000\">&lt;<data-lsp lsp='(property) JSXInternal.IntrinsicElements.div: h.JSX.HTMLAttributes&amp;lt;HTMLDivElement>'>div</data-lsp>></span><span style=\"color: #333333\">Hello</span><span style=\"color: #800000\">&lt;/<data-lsp lsp='(property) JSXInternal.IntrinsicElements.div: h.JSX.HTMLAttributes&amp;lt;HTMLDivElement>'>div</data-lsp>></span>\n<span style=\"color: #333333\">  </span><span style=\"color: #800000\">&lt;/&gt;</span>\n<span style=\"color: #333333\">);</span></code><a href='https://www.typescriptlang.org/play/#code/PQKhAIAECsGcA9wAtwmAKFBGCBiAnAQwHNwCSBbAUwDsAXVDdASwoAcB7fBgb2QBoyRYtXrgAvuABm+DhXAAiNviqEAxnQUBudOjUcasBgAkqAGzMcA6lzMATcAF5wACgCUTgHyv04cAB5PXz8Au2YAN09TCw5-YDDI4Ligty0gA'>Try</a></div></pre>","redirectHref":"/tsconfig#jsxFragmentFactory"}},"staticQueryHashes":[]}