{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/allowSyntheticDefaultImports.html","result":{"pageContext":{"title":"allowSyntheticDefaultImports","lang":"en","html":"<p>When set to true, <code>allowSyntheticDefaultImports</code> allows you to write an import like:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">React</span><span style=\"color: #333333\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"react\"</span><span style=\"color: #333333\">;</span></code></div></pre>\n<p>instead of:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #333333\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #333333\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">React</span><span style=\"color: #333333\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"react\"</span><span style=\"color: #333333\">;</span></code></div></pre>\n<p>When the module <strong>does not</strong> explicitly specify a default export.</p>\n<p>For example, without <code>allowSyntheticDefaultImports</code> as true:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #008000\"><data-err>// @filename: utilFunctions.js</data-err></span>\n<span class=\"error\"><span>Module '\"/home/runner/work/TypeScript-Website/TypeScript-Website/packages/typescriptlang-org/utilFunctions\"' has no default export.</span><span class=\"code\">1192</span></span><span class=\"error-behind\">Module '\"/home/runner/work/TypeScript-Website/TypeScript-Website/packages/typescriptlang-org/utilFunctions\"' has no default export.</span><span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='const getStringLength: (str: any) => any'>getStringLength</data-lsp> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> (</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) str: any'>str</data-lsp></span><span style=\"color: #333333\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) str: any'>str</data-lsp></span><span style=\"color: #333333\">.<data-lsp lsp='any'>length</data-lsp>;</span>\n\n<span style=\"color: #333333\"><data-lsp lsp='var module: {&amp;#13;    &amp;quot;\\&amp;quot;/home/runner/work/TypeScript-Website/TypeScript-Website/packages/typescriptlang-org/utilFunctions\\&amp;quot;&amp;quot;: typeof import(&amp;quot;/home/runner/work/TypeScript-Website/TypeScript-Website/packages/typescriptlang-org/utilFunctions&amp;quot;);&amp;#13;}'>module</data-lsp>.<data-lsp lsp='module &amp;quot;/home/runner/work/TypeScript-Website/TypeScript-Website/packages/typescriptlang-org/utilFunctions&amp;quot;'>exports</data-lsp> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> {</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(alias) const getStringLength: (str: any) => any&amp;#13;import getStringLength'>getStringLength</data-lsp></span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">};</span>\n\n<span style=\"color: #008000\">// @filename: index.ts</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='import utils'>utils</data-lsp></span><span style=\"color: #333333\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"./utilFunctions\"</span><span style=\"color: #333333\">;</span>\n\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='const count: any'>count</data-lsp> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='import utils'>utils</data-lsp>.<data-lsp lsp='any'>getStringLength</data-lsp></span><span style=\"color: #333333\">(</span><span style=\"color: #A31515\">\"Check JS\"</span><span style=\"color: #333333\">);</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygIwCYCsBOdacMAoECAYwAtIyBrAKURLHAEMAbNuAdwaYkkQBZOABMArm0gBJAHYAXGHAAOqAGbtEkPuFUBLSTJYBbSKjFz9AMTEyyFuDMQA6AFaNS4GXClGlbXWS6cgCCMgCeahpaZA6IcqAA5pByAMpy0LoyCQAykFlyFKAAvKAAFHHQAJTFAHygFU4GCQUA3ERERqISkE6QAB5KCHKIxaAA3kSgiclpGVm5+RQANEQAvm3aegbGpqCZIv1Ow0S6vkOg5vojqvBGoABETsCXbNa29o73GzGO8TE28RKL2cSVS6UyOTyzQopXuAGEqLRQHQUvdKi0gA'>Try</a></div></pre>\n<p>This code raises an error because there isn’t a <code>default</code> object which you can import. Even though it feels like it should.\nFor convenience, transpilers like Babel will automatically create a default if one isn’t created. Making the module look a bit more like:</p>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #008000\">// @filename: utilFunctions.js</span>\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">getStringLength</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> (</span><span style=\"color: #1A1A1A\">str</span><span style=\"color: #333333\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">str</span><span style=\"color: #333333\">.length;</span>\n<span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">allFunctions</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> {</span>\n<span style=\"color: #333333\">  </span><span style=\"color: #1A1A1A\">getStringLength</span><span style=\"color: #333333\">,</span>\n<span style=\"color: #333333\">};</span>\n\n<span style=\"color: #333333\">module.exports </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">allFunctions</span><span style=\"color: #333333\">;</span>\n<span style=\"color: #333333\">module.exports.</span><span style=\"color: #1A1A1A\">default</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\">allFunctions</span><span style=\"color: #333333\">;</span></code></div></pre>\n<p>This flag does not affect the JavaScript emitted by TypeScript, it only for the type checking.\nThis option brings the behavior of TypeScript in-line with Babel, where extra code is emitted to make using a default export of a module more ergonomic.</p>","redirectHref":"/tsconfig#allowSyntheticDefaultImports"}},"staticQueryHashes":[]}