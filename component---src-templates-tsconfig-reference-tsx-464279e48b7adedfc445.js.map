{"version":3,"sources":["webpack:///./src/templates/tsconfigReference.tsx","webpack:///../gatsby-remark-shiki-twoslash/dist/dom.js","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/node_modules/core-js/modules/es6.string.anchor.js","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/node_modules/core-js/modules/_string-html.js"],"names":["TSConfigReferenceTemplateComponent","props","i","createInternational","useIntl","post","data","markdownRemark","console","log","JSON","stringify","categories","sitePage","fields","useEffect","subnavLinks","document","querySelectorAll","forEach","link","addEventListener","event","preventDefault","querySelector","target","scrollIntoView","behavior","block","updateSidebar","currentPossibleAnchor","fromTop","window","scrollY","section","hash","offsetTop","classList","add","remove","passive","capture","setupTwoslashHovers","removeEventListener","title","description","lang","pageContext","locale","allSitePage","className","id","map","c","key","anchor","href","display","options","element","dangerouslySetInnerHTML","__html","html","pageQuery","exports","__esModule","resetHover","globalPopover","getElementById","style","twoslashes","hover","hovered","nodeName","bodyRect","elemRect","message","getAttribute","position","body","getBoundingClientRect","top","left","tooltip","createElement","appendChild","txt","innerHTML","textContent","value","codeblock","createHTML","name","this","$export","fails","defined","quot","string","tag","attribute","S","String","p1","replace","module","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"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","file":"component---src-templates-tsconfig-reference-tsx-464279e48b7adedfc445.js","sourcesContent":["import React, { useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { Layout } from \"../components/layout\"\n\nimport { useIntl } from \"react-intl\";\nimport { createInternational } from \"../lib/createInternational\"\nimport { Intl } from \"../components/Intl\"\nimport { headCopy } from \"../copy/en/head-seo\"\n\nimport \"./markdown.scss\"\nimport \"./tsconfig.scss\"\n\nimport { TSConfigReferenceTemplateQuery } from \"../__generated__/gatsby-types\"\nimport { setupTwoslashHovers } from \"gatsby-remark-shiki-twoslash/dist/dom\"\n\n\ntype Props = { pageContext: any, data: TSConfigReferenceTemplateQuery, path: string }\n\nconst TSConfigReferenceTemplateComponent = (props) => {\n  const i = createInternational<typeof headCopy>(useIntl())\n\n  const post = props.data.markdownRemark\n  if (!post) {\n    console.log(\"Could not render:\", JSON.stringify(props))\n    return <div></div>\n  }\n\n  const categories = props.data.sitePage!.fields!.categories\n\n  useEffect(() => {\n    // Overrides the anchor behavior to smooth scroll instead\n    // Came from https://css-tricks.com/sticky-smooth-active-nav/\n    const subnavLinks = document.querySelectorAll<HTMLAnchorElement>(\".tsconfig nav li a\");\n\n    subnavLinks.forEach(link => {\n      link.addEventListener(\"click\", event => {\n        event.preventDefault();\n\n        let target = document.querySelector(event.target![\"hash\"]);\n        target.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n      })\n    })\n\n    // Sets the current selection\n    const updateSidebar = () => {\n      const fromTop = window.scrollY;\n      let currentPossibleAnchor: HTMLAnchorElement | undefined\n\n      // Scroll down to find the highest anchor on the screen\n      subnavLinks.forEach(link => {\n        const section = document.querySelector<HTMLDivElement>(link.hash);\n        if (!section) { return }\n        const isBelow = section.offsetTop <= fromTop\n        if (isBelow) currentPossibleAnchor = link\n      });\n\n      // Then set the active tag\n      subnavLinks.forEach(link => {\n        if (link === currentPossibleAnchor) {\n          link.classList.add(\"current\");\n        } else {\n          link.classList.remove(\"current\");\n        }\n      })\n    }\n\n    // Handles setting the scroll \n    window.addEventListener(\"scroll\", updateSidebar, { passive: true, capture: true });\n    updateSidebar()\n    setupTwoslashHovers()\n\n    return () => {\n      window.removeEventListener(\"scroll\", updateSidebar)\n    }\n  }, [])\n\n  return (\n    <Layout title={i(\"tsconfig_title\")} description={i(\"tsconfig_description\")} lang={props.pageContext.locale} allSitePage={props.data.allSitePage}>\n      <div className=\"tsconfig raised main-content-block\">\n        <div id=\"full-option-list\" className=\"indent\">\n          {categories!.categories!.map(c => {\n            if (!c) return null\n            return <div className=\"tsconfig-nav-top\" key={c.anchor!}>\n              <h5><a href={\"#\" + c.anchor}>{c.display}</a></h5>\n              <ul key={c.anchor!}>\n                {c.options!.map(element => <li key={element!.anchor!}><a href={\"#\" + element!.anchor!}>{element!.anchor}</a></li>)}\n              </ul>\n            </div>\n          })}\n        </div>\n\n        <nav id=\"sticky\">\n          {categories!.categories!.map(c => <li key={c!.anchor!}><a href={\"#\" + c!.anchor}>{c!.display}</a></li>)}\n        </nav>\n\n        <div className=\"indent\">\n          <div dangerouslySetInnerHTML={{ __html: post.html! }} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\n\nexport const pageQuery = graphql`\n  query TSConfigReferenceTemplate($path: String, $tsconfigMDPath: String!) {\n    ...AllSitePage\n\n    sitePage(path: { eq: $path }) {\n      id\n      fields {\n        categories {\n          categories {\n            display\n            anchor\n            options {\n              anchor\n            }\n          }\n        }\n      }\n    }\n\n    markdownRemark(fileAbsolutePath: {eq: $tsconfigMDPath} ) {\n      id\n      html\n\n      frontmatter {\n        permalink\n      }\n    }\n  }\n`\n\n\nexport default (props: Props) => <Intl locale={props.pageContext.locale}><TSConfigReferenceTemplateComponent {...props} /></Intl>\n","\"use strict\";\nexports.__esModule = true;\n// Gets the position of an element relative to the whole page\nvar getAbsoluteElementPos = function (element) {\n    var bodyRect = document.body.getBoundingClientRect();\n    var elemRect = element.getBoundingClientRect();\n    var top = elemRect.top - bodyRect.top;\n    var left = elemRect.left - bodyRect.left;\n    return {\n        top: top,\n        left: left\n    };\n};\n// Hide it\nvar resetHover = function () {\n    var globalPopover = document.getElementById('twoslash-mouse-hover-info');\n    if (globalPopover)\n        globalPopover.style.display = 'none';\n};\n// Get it\nvar findOrCreateTooltip = function () {\n    var globalPopover = document.getElementById('twoslash-mouse-hover-info');\n    if (!globalPopover) {\n        globalPopover = document.createElement('div');\n        globalPopover.style.position = 'absolute';\n        globalPopover.id = 'twoslash-mouse-hover-info';\n        document.body.appendChild(globalPopover);\n    }\n    return globalPopover;\n};\n/**\n * Creates the main mouse over popup for LSP info using the DOM API.\n * It is expected to be run inside a `useEffect` block inside your main\n * exported component in Gatsby.\n *\n * @example\n * import React, { useEffect } from \"react\"\n * import { setupTwoslashHovers } from \"gatsby-remark-shiki-twoslash/dom\";\n *\n * export default () => {\n *   // Add a the hovers\n *   useEffect(setupTwoslashHovers, [])\n *\n *   // Normal JSX\n *   return </>\n * }\n *\n */\nexports.setupTwoslashHovers = function () {\n    // prettier-ignore\n    var twoslashes = document.querySelectorAll(\".shiki.twoslash .code-container code\");\n    // Gets triggered on the spans inside the codeblocks\n    var hover = function (event) {\n        var hovered = event.target;\n        if (hovered.nodeName !== 'DATA-LSP')\n            return resetHover();\n        var message = hovered.getAttribute('lsp');\n        var position = getAbsoluteElementPos(hovered);\n        // Create or re-use the current hover dic\n        var tooltip = findOrCreateTooltip();\n        // Use a textarea to un-htmlencode for presenting to the user\n        var txt = document.createElement('textarea');\n        txt.innerHTML = message;\n        tooltip.textContent = txt.value;\n        // Offset it a bit from the mouse and present it at an absolute position\n        var yOffset = 20;\n        tooltip.style.display = 'block';\n        tooltip.style.top = position.top + yOffset + \"px\";\n        tooltip.style.left = position.left + \"px\";\n    };\n    twoslashes.forEach(function (codeblock) {\n        codeblock.addEventListener('mouseover', hover);\n        codeblock.addEventListener('mouseout', resetHover);\n    });\n};\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}